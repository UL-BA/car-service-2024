* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  background: #4c4c4d;
  z-index: 0;
  position: relative; /* Ensure proper stacking */
  overflow: visible; /* Allow interactions */
}

.formCard {
  background: rgb(35, 34, 34);
  backdrop-filter: blur(10px);
  padding: 40px;
  border-radius: 20px;
  width: 100%;
  max-width: 400px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  border: 1px solid rgb(27, 26, 26);
  z-index: 1000000;

}

h2 {
  color: white;
  text-align: center;
  margin-bottom: 10px;
  font-size: 28px;
}

.subtitle {
  color: #888;
  text-align: center;
  margin-bottom: 30px;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 20px;
  z-index: 1000000;
}

.inputGroup {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

input {
  width: 100%;
  padding: 12px;
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(255, 255, 255, 0.05);
  color: white;
  transition: all 0.3s ease;
  z-index: 1000000;

  &::placeholder {
    color: #888;
  }

  &:focus {
    outline: none;
    border-color: #f48e21;
  }
}

.errorInput {
  border-color: #ff4444;
}

.errorText {
  color: #ff4444;
  font-size: 12px;
  margin-top: 4px;
}

.submitButton {
  background: linear-gradient(145deg, #f48e21, #ff7a1a);
  color: white;
  padding: 12px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  transition: transform 0.2s ease;

  &:hover {
    transform: translateY(-2px);
  }
}

.divider {
  text-align: center;
  margin: 20px 0;
  position: relative;

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    width: 45%;
    height: 1px;
    background: rgba(255, 255, 255, 0.1);
  }

  &::before {
    left: 0;
  }

  &::after {
    right: 0;
  }
}

.googleButton {
  width: 100%;
  padding: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  background: transparent;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    background: rgba(255, 255, 255, 0.05);
  }
}

.googleIcon {
  font-size: 18px;
}

.switchMode {
  text-align: center;
  margin-top: 20px;
  color: #888;

  button {
    background: none;
    border: none;
    color: #f48e21;
    cursor: pointer;
    font-weight: 600;

    &:hover {
      text-decoration: underline;
    }
  }
}

.errorMessage,
.successMessage {
  padding: 12px;
  border-radius: 8px;
  margin-bottom: 20px;
  text-align: center;
}

.errorMessage {
  background: rgba(255, 68, 68, 0.1);
  border: 1px solid rgba(255, 68, 68, 0.2);
  color: #ff4444;
}

.successMessage {
  background: rgba(39, 174, 96, 0.1);
  border: 1px solid rgba(39, 174, 96, 0.2);
  color: #27ae60;
  animation: fadeIn 0.3s ease;
}

.footerText {
  text-align: center;
  color: #888;
  margin-top: 30px;
  font-size: 12px;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

$particleSize: 50vmin;
$animationDuration: 6s;
$amount: 15;
.container .background span {
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  $colors: (
    #f79b38,
    // #E45A84,
    // #FFACAC
  );
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: nth($colors, random(length($colors)));
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}


// .formCard {
//   background: rgb(35, 34, 34);
//   backdrop-filter: blur(10px);
//   padding: 40px;
//   border-radius: 20px;
//   width: 100%;
//   max-width: 400px;
//   box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//   border: 1px solid rgb(27, 26, 26);
//   z-index: 10;
//   position: relative;
// }

.background span {
  z-index: 1;
  pointer-events: none; /* Ensure background doesn't block interactions */
}
